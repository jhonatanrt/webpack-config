doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title @ViewData["Title"] - Microsoft.eShopOnContainers.WebMVC
    environment(names='Development')
      link(rel='stylesheet', href='~/lib/bootstrap/dist/css/bootstrap.css')
      link(rel='stylesheet', href='~/css/app.css')
      link(rel='stylesheet', href='~/css/app.component.css')
      link(rel='stylesheet', href='~/css/shared/components/header/header.css')
      link(rel='stylesheet', href='~/css/shared/components/identity/identity.css')
      link(rel='stylesheet', href='~/css/shared/components/pager/pager.css')
      link(rel='stylesheet', href='~/css/basket/basket.component.css')
      link(rel='stylesheet', href='~/css/campaigns/campaigns.component.css')
      link(rel='stylesheet', href='~/css/basket/basket-status/basket-status.component.css')
      link(rel='stylesheet', href='~/css/catalog/catalog.component.css')
      link(rel='stylesheet', href='~/css/orders/orders.component.css')
      link(rel='stylesheet', href='~/css/orders/orders-detail/orders-detail.component.css')
      link(rel='stylesheet', href='~/css/orders/orders-new/orders-new.component.css')
      link(rel='stylesheet', href='~/css/override.css', type='text/css')
      link(rel='stylesheet', href='~/css/site.min.css', type='text/css')
    environment(names='Staging,Production')
      link(rel='stylesheet', href='https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/css/bootstrap.min.css', asp-fallback-href='~/lib/bootstrap/dist/css/bootstrap.min.css', asp-fallback-test-class='sr-only', asp-fallback-test-property='position', asp-fallback-test-value='absolute')
      link(rel='stylesheet', href='~/css/site.min.css', asp-append-version='true')
      link(rel='stylesheet', href='~/css/override.css', type='text/css')
  body
    header.navbar.navbar-light.navbar-static-top
      .container
        article.row
          section.col-lg-7.col-md-6.col-xs-12
            a.navbar-brand(routerlink='catalog')
              a(asp-area='', asp-controller='Catalog', asp-action='Index')
                img(src='~/images/brand.png')
          |                 @await Html.PartialAsync("_LoginPartial")
    |     @RenderBody()
    footer.esh-app-footer
      .container
        article.row
          section.col-sm-6
            img.esh-app-footer-brand(src='~/images/brand_dark.png')
          section.col-sm-6
            img.esh-app-footer-text.hidden-xs(src='~/images/main_footer_text.png', width='335', height='26', alt='footer text image')
    environment(names='Development')
      script(src='~/lib/jquery/dist/jquery.js')
      script(src='~/lib/bootstrap/dist/js/bootstrap.js')
      script(src='~/js/site.js', asp-append-version='true')
    environment(names='Staging,Production')
      script(src='https://ajax.aspnetcdn.com/ajax/jquery/jquery-2.2.0.min.js', asp-fallback-src='~/lib/jquery/dist/jquery.min.js', asp-fallback-test='window.jQuery')
      script(src='https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/bootstrap.min.js', asp-fallback-src='~/lib/bootstrap/dist/js/bootstrap.min.js', asp-fallback-test='window.jQuery && window.jQuery.fn && window.jQuery.fn.modal')
      script(src='~/js/site.min.js', asp-append-version='true')
    |     @RenderSection("scripts", required: false)
    |     @using Microsoft.AspNetCore.Authentication;
    |     @using Microsoft.Extensions.Options
    |     @inject IOptions
    appsettings
      | settings
      script(type='text/javascript').
        if ('@User.Identity.IsAuthenticated' === 'True') {
        var timerId;
        let connection = stablishConnection();
        connection.start().then(function () {
        console.log('User Registered to Signalr Hub');
        });
        registerNotificationHandlers(connection);
        }
        function stablishConnection() {
        let hubHttpConnection = new signalR.HttpConnection('@settings.Value.SignalrHubUrl/hub/notificationhub', {
        transport: signalR.TransportType.LongPolling,
        accessTokenFactory: () => {
        return "Authorization", getToken();
        }
        });
        return new signalR.HubConnection(hubHttpConnection);
        }
        function registerNotificationHandlers(connection) {
        connection.on("UpdatedOrderState", (message) => {
        toastr.success('Updated to status: ' + message.status, 'Order Id: ' + message.orderId);
        if (window.location.pathname.split("/").pop() === 'Order') {
        refreshOrderList();
        }
        });
        }
        function getToken() {
        return '@Context.GetTokenAsync("access_token").Result';
        }
        function refreshOrderList() {
        clearTimeout(timerId);
        timerId = setTimeout(function () {
        window.location.reload();
        }, 1000);
        }
